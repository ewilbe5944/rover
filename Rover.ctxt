#BlueJ class context
comment0.target=Rover
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Rover\ here.\r\n\r\n\ @author\ Emily\ Wilber\r\n\ @version\ Sept.\ 17,\ 2018\r\n
comment1.params=name
comment1.target=Rover(java.lang.String)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Rover\r\n
comment10.params=
comment10.target=void\ rotateLeft()
comment10.text=\ Rotates\ the\ rover\ once\ to\ the\ left\r\n
comment11.params=amount
comment11.target=void\ rotate(int)
comment11.text=\ Rotates\ the\ rover\ amount\ number\ of\ times\ to\ the\ right\ if\ the\ int\ is\ pos\r\n\ and\ to\ the\ left\ if\ the\ int\ is\ neg\r\n\ \r\n\ @param\ amount\ \ \ \ the\ number\ of\ times\ the\ rover\ will\ turn\ left\ if\ negative\ or\ right\ if\ positive\r\n
comment12.params=amount
comment12.target=void\ move(int)
comment12.text=\ Makes\ the\ rover\ move\ amount\ number\ of\ units\ in\ the\ direction\ he\ is\ \r\n\ facing\r\n\ \r\n\ @param\ amount\ \ \ the\ number\ of\ times\ the\ rover\ will\ move\ in\ the\ direction\ it\ is\ facing\r\n
comment13.params=x\ y
comment13.target=void\ moveTo(int,\ int)
comment13.text=\r\n\ Will\ figure\ out\ a\ path\ to\ reach\ a\ certain\ point\ using\ move()\ \r\n\ and\ rotate()\ functions\ but\ only\ in\ 4-directional\ motion\ \r\n\ \r\n\ @param\ x\ \ \ horizontal\ location\ of\ the\ desired\ location\ \r\n\ @param\ y\ \ \ vertical\ location\ of\ the\ desired\ location\ \r\n\ \r\n
comment14.params=
comment14.target=void\ goHome()
comment14.text=\r\n\ Moves\ the\ Rover\ to\ its\ original\ location\ using\ the\ moveTo\ method\r\n
comment15.params=other
comment15.target=void\ attack(Rover)
comment15.text=\r\n\ Subtracts\ points\ of\ damage\ from\ the\ other\ rover\ that\ is\ being\ attacked\r\n\ \r\n\ @param\ Rover\ other\ \ \ \ takes\ the\ name\ of\ another\ rover\ that\ will\ take\ damage\r\n
comment16.params=x\ y
comment16.target=void\ teleport(int,\ int)
comment16.text=\r\n\ Instantly\ moves\ the\ rover\ to\ whatever\ (x,y)\ coordinate\ is\ inputted\r\n\ \r\n\ @param\ x\ \ \ horizontal\ location\ of\ the\ desired\ location\ \r\n\ @param\ y\ \ \ vertical\ location\ of\ the\ desired\ location\ \ \r\n
comment17.params=
comment17.target=void\ takePicture()
comment17.text=\r\n\ Adds\ 1\ to\ the\ numPics\ variable\ unless\ the\ rover\ already\ has\ 5\ photos\r\n
comment18.params=
comment18.target=void\ transmitPicture()
comment18.text=\r\n\ Sends\ all\ pics\ away\ and\ sets\ numPics\ \=\ 0\r\n
comment19.params=
comment19.target=java.lang.String\ toString()
comment19.text=\ Tells\ you\ where\ the\ rover\ is\ and\ where\ it's\ facing\ \r\n
comment2.params=name\ x\ y\ dir
comment2.target=Rover(java.lang.String,\ int,\ int,\ int)
comment2.text=\r\n\ Constructor\ for\ objects\ of\ class\ Rover\r\n
comment3.params=
comment3.target=boolean\ willWork()
comment3.text=\r\n\ Determines\ if\ the\ rover\ has\ power\ and\ is\ alive\r\n
comment4.params=powerNeeded
comment4.target=boolean\ willWork(int)
comment4.text=\r\n\ Determines\ if\ the\ rover\ has\ power\ and\ is\ alive\ \r\n\ AND\ has\ enough\ power\ to\ do\ the\ action\r\n\ \r\n\ @param\ powerNeeded\ \ \ \ the\ amount\ of\ power\ that\ will\ be\ substracted\ from\ the\ rover's\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ power\ variable\ if\ it\ has\ enough\r\n
comment5.params=
comment5.target=void\ findWhatsWrong()
comment5.text=\r\n\ Determines\ what's\ wrong\ (out\ of\ power\ or\ dead)\ if\ it\ won't\ work\r\n
comment6.params=powerNeeded
comment6.target=void\ findWhatsWrong(int)
comment6.text=\r\n\ Determines\ what's\ wrong\ (out\ of\ power\ or\ dead\ OR\ doesn't\ have\ enough\ \r\n\ power\ to\ do\ the\ action)\ if\ it\ won't\ work\r\n\ \r\n\ @param\ powerNeeded\ \ \ \ the\ amount\ of\ power\ that\ will\ be\ substracted\ from\ the\ rover's\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ power\ variable\ if\ it\ has\ enough\r\n
comment7.params=amount
comment7.target=void\ charge(int)
comment7.text=\r\n\ Adds\ a\ given\ amount\ to\ the\ power\ of\ a\ rover\ but\ doesnt\ let\ it\r\n\ exceed\ 100\r\n\ \r\n\ @param\ amount\ \ \ \ \ the\ amount\ that\ will\ be\ added\ to\ the\ rover's\ charge\ if\ it\ doesn't\ exceed\ 100\r\n
comment8.params=dir
comment8.target=java.lang.String\ getDirectionName(int)
comment8.text=\r\n\ Tells\ the\ cardinal\ direction\ of\ the\ direction\ the\ rover\ is\ facing\r\n\ \r\n\ @param\ dir\ \ \ the\ numerical\ representation\ of\ a\ cardinal\ direction\r\n
comment9.params=
comment9.target=void\ rotateRight()
comment9.text=\ Rotates\ the\ rover\ once\ to\ the\ right\ \r\n
numComments=20
